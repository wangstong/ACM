#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn = 15;
int n, m, maxd, kase = 0;
int mat[maxn][maxn];
bool vis[5][2*maxn];
bool judge() {
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            if (mat[i][j] && !vis[1][i] && !vis[2][j] && !vis[3][i+j] && !vis[4][maxn+i-j])
                return false;
        }
    }
    return true;
}
bool dfs(int i, int dep) {
    if (dep == maxd) {
        if (judge()) return true;
        return false;
    }
    for(; i <= n; i++) {
        for(int j = 1; j <= m; j++){
            bool t1 = vis[1][i], t2 = vis[2][j], t3 = vis[3][i+j], t4 = vis[4][maxn+i-j];
            vis[1][i] = vis[2][j] = vis[3][i+j] = vis[4][maxn+i-j] = true;
            if(dfs(i+1, dep+1)) return true;
            vis[1][i] = t1, vis[2][j] = t2, vis[3][i+j] = t3, vis[4][maxn+i-j] = t4;
        }
    }
    return false;
}
int solve() {
    for(maxd = 0; ; maxd++){
        memset(vis, 0, sizeof(vis)); // vis¼ÇÂ¼·½Ïò
        if(dfs(1,0)) return maxd;
    }
    return -1;
}
void print() {
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++)
            printf("%d", mat[i][j]);
        printf("\n");
    }
}
int main() {
    while (cin >> n && n) {
        cin >> m;
        for (int i = 1; i <= n; i++) {
            string s; cin >> s;
            for (int j = 0; j < s.size(); j++) {
                if (s[j] == 'X') mat[i][j+1] = 1;
                else mat[i][j+1] = 0;
            }
        }
        //print();
        int ans = solve();
        printf("Case %d: %d\n", ++kase, ans);
    }
    return 0;
}
