#include <iostream>
#include <cstdio>
#include <cstring>

#define mem(a) memset(a, 0, sizeof(a))

using namespace std;

int mat[10][10], row[10][10], col[10][10], map[10][10];
bool flag;

void dfs(int x, int y){
    if (flag == true)  // 不加这个会出现Output Limit Exceeded
        return;
    if (x > 9|| y > 9) {
        flag = true;
        for (int i = 1; i <= 9; i++) {
            for (int j = 1; j <= 9; j++) {
                printf("%d", mat[i][j]);
            }
            putchar('\n');
        }
    }
    else {
        if (mat[x][y]) {
            if (y < 9) {
                dfs(x, y+1);
            }
            else if (y == 9) {
                dfs(x+1, 1);
            }
        }
        else {
            for (int i = 1; i <= 9; i++) {
                int k = (x-1)/3*3 + (y-1)/3;
                if (!row[x][i] && !col[y][i] && !map[k][i]) {
                    row[x][i] = col[y][i] = map[k][i] = 1;
                    mat[x][y] = i;
                    if (y < 9) {
                        dfs(x, y+1);
                    }
                    else if (y == 9) {
                        dfs(x+1, 1);
                    }

                    row[x][i] = col[y][i] = map[k][i] = 0;
                    mat[x][y] = 0;
                }
            }
        }
    }
}

int main() {
    //freopen("input.txt", "r", stdin);

    int T;
    scanf("%d", &T);
    while (getchar() != '\n')
        continue;

    while (T--) {
        flag = false;
        mem(mat), mem(row), mem(col), mem(map);
        for (int i = 1; i <= 9; i++) {
            for (int j = 1; j <= 9; j++) {
                char ch = getchar();
                int x = ch-'0';
                if (x != 0) {
                    int k = (i-1)/3*3 + (j-1)/3;
                    mat[i][j] = x;
                    row[i][x] = col[j][x] = map[k][x] = 1;
                }
            }
            while (getchar() != '\n')
                continue;
        }
        dfs(1, 1);
    }
    return 0;
}
